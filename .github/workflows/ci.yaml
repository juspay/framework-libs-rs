name: CI

on:
  push:
    branches:
      - main

  pull_request:

  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Disable incremental compilation.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        shell: bash
        run: cargo +nightly fmt --all --check

  check-stable:
    name: Check compilation on stable toolchain
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable 2 weeks ago
          components: clippy

      - uses: Swatinem/rust-cache@v2.7.8

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just
          checksum: true

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest
          checksum: true

      - name: Install cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
          checksum: true

      - name: Run clippy
        shell: bash
        run: just clippy

      - name: Run tests
        shell: bash
        run: just test --profile ci

      - name: Run cargo hack
        shell: bash
        run: just hack

  check-msrv:
    name: Check compilation on MSRV toolchain
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Obtain MSRV from Cargo.toml
        shell: bash
        run: |
          rust_version=$(yq -oy '.workspace.package.rust-version' Cargo.toml)
          echo "rust_version=${rust_version}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ env.rust_version }}"

      - uses: Swatinem/rust-cache@v2.7.8

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just
          checksum: true

      - name: Install cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
          checksum: true

      - name: Run cargo hack
        shell: bash
        run: just hack

  generate-docs:
    name: Generate Rust crate documentation
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2.7.8

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just
          checksum: true

      - name: Run cargo doc
        shell: bash
        run: just deny_doc_warnings=true doc

  coverage:
    name: Run tests with coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust (stable toolchain)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable 2 weeks ago
          components: llvm-tools-preview

        # Nightly toolchain is required for obtaining coverage data from doc tests.
      - name: Install Rust (nightly toolchain)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2.7.8

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just
          checksum: true

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest
          checksum: true

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
          checksum: true

      - name: Collect coverage data (including doctests)
        shell: bash
        run: just coverage ci

      - name: Upload coverage data to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: lcov.info

  typos:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Spell check
        uses: crate-ci/typos@master
